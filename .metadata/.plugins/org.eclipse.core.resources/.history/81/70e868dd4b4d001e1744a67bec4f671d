package com.streams;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class StreamvsPrarallelSteam {

	public static void main(String[] args) {

		/*
		 * long start = 0; long end = 0; System.out.println("plain Stream operation");
		 * start = System.currentTimeMillis(); IntStream.range(0, 100).forEach(p ->
		 * System.out.print(p + "")); end = System.currentTimeMillis();
		 * System.out.println(); System.out.println("stream operation took " + (end -
		 * start) + "seconds"); // ====================================================
		 * System.out.println("parallel Stream operation"); start =
		 * System.currentTimeMillis(); IntStream.range(0, 100).parallel().forEach(p ->
		 * System.out.print(p + " ")); end = System.currentTimeMillis();
		 * System.out.println(); System.out.println("parallel stream operation took " +
		 * (end - start) + "seconds");
		 */

		// ===========================================
		// example for threads

		/*
		 * IntStream.range(0, 10).forEach(x ->
		 * System.out.println(Thread.currentThread().getName() + " " + x));
		 * System.out.println("=========="); IntStream.range(0, 10).parallel().forEach(x
		 * -> System.out.println(Thread.currentThread().getName() + " " + x));
		 */
		
		// ===================================================
		// example for employee database perfomance
		List<Employees> emp = EmployeeDatabase.getEmployees();
		
		long start = 0;
		long end = 0;
		System.out.println("plain Stream operation");
		start = System.currentTimeMillis();
		Double avgSalary = emp.stream().map(Employees::getSalary).collect(Collectors.averagingDouble(Double::doubleValue));
		end = System.currentTimeMillis();
		System.out.println();
		System.out.println("stream operation took " + (end - start) + "seconds and avg salary is" +avgSalary);
//----------
		
		System.out.println("plain Stream operation");
		start = System.currentTimeMillis();
		Double avgSalary1 = emp.parallelStream().map(Employees::getSalary).collect(Collectors.averagingDouble(Double::doubleValue));
		end = System.currentTimeMillis();
		System.out.println();
		System.out.println("stream operation took " + (end - start) + "seconds and avg salary is" +avgSalary1 );
		
	

	}

}
